package jp.pioneer.carsync.domain.model;

import android.support.annotation.NonNull;

import java.util.HashMap;
import java.util.Map;

import static com.google.common.base.Preconditions.checkNotNull;

/**
 * イコライザー31band設定値Map.
 */
public class EqualizerBandMap {
    private final static Map<SoundFxSettingEqualizerType, float[]> map = new HashMap<SoundFxSettingEqualizerType, float[]>() {{
        put(SoundFxSettingEqualizerType.NATURAL, new float[]{
                -6.000000f, -6.000000f, -6.000000f, -6.000000f, -6.000000f, -2.533333f,  2.000000f,  2.000000f,
                 2.000000f,  2.000000f,  2.000000f,  1.130435f,  0.000000f,  0.000000f,  0.000000f,  0.866667f,
                 2.000000f,  2.000000f,  2.000000f,  0.133333f, -2.000000f, -2.000000f, -2.000000f, -0.162162f,
                 2.000000f,  2.000000f,  2.000000f,  2.888889f,  4.000000f,  4.000000f,  4.000000f});
        put(SoundFxSettingEqualizerType.POWERFUL, new float[]{
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f,  3.733333f,  6.000000f,  5.111111f,
                4.000000f, 3.066667f, 2.000000f, 1.130435f, 0.000000f, -0.918919f, -2.000000f, -1.133333f,
                0.000000f, 0.888889f, 2.000000f, 2.000000f, 2.000000f,  2.000000f,  2.000000f,  2.918919f,
                4.000000f, 4.000000f, 4.000000f, 4.888889f, 6.000000f,  6.000000f,  6.000000f});
        put(SoundFxSettingEqualizerType.SUPER_BASS, new float[]{
                8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 7.111111f,
                6.000000f, 6.000000f, 6.000000f, 4.260870f, 2.000000f, 1.081081f, 0.000000f, 0.000000f,
                0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.869565f, 2.000000f, 2.000000f,
                2.000000f, 2.866667f, 4.000000f, 3.111111f, 2.000000f, 2.000000f, 2.000000f});
        put(SoundFxSettingEqualizerType.TODOROKI, new float[]{
                8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f,
                8.000000f, 8.000000f, 8.000000f, 7.130435f, 6.000000f, 4.162162f, 2.000000f, 1.133333f,
                0.000000f, 0.000000f, 0.000000f, 0.933333f, 2.000000f, 3.739131f, 6.000000f, 6.918919f,
                8.000000f, 8.000000f, 8.000000f, 8.888889f, 10.000000f, 10.000000f, 10.000000f});
        put(SoundFxSettingEqualizerType.VOCAL, new float[]{
                -6.000000f, -6.000000f, -6.000000f, -6.000000f, -6.000000f, -4.266667f, -2.000000f, -1.111111f,
                 0.000000f,  1.866667f,  4.000000f,  4.869565f,  6.000000f,  6.000000f,  6.000000f,  4.266667f,
                 2.000000f,  1.111111f,  0.000000f,  0.933333f,  2.000000f,  2.869565f,  4.000000f,  4.000000f,
                 4.000000f,  3.133333f,  2.000000f,  1.111111f,  0.000000f,  0.000000f,  0.000000f});
        put(SoundFxSettingEqualizerType.POP_ROCK, new float[]{
                6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.866667f, 8.000000f, 8.000000f,
                8.000000f, 7.066667f, 6.000000f, 5.130435f, 4.000000f, 3.081081f, 2.000000f, 2.000000f,
                2.000000f, 1.111111f, 0.000000f, 0.933333f, 2.000000f, 2.000000f, 2.000000f, 2.918919f,
                4.000000f, 4.866667f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f});
        put(SoundFxSettingEqualizerType.ELECTRONICA, new float[]{
                8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.000000f, 8.866667f, 10.000000f, 9.111111f,
                8.000000f, 7.066667f, 6.000000f, 5.130435f, 4.000000f, 3.081081f,  2.000000f, 1.133333f,
                0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.000000f, 0.869565f,  2.000000f, 2.918919f,
                4.000000f, 4.000000f, 4.000000f, 4.000000f, 4.000000f, 4.000000f,  4.000000f});
        put(SoundFxSettingEqualizerType.EQ_SAMBA, new float[]{
                4.000000f, 4.000000f, 4.000000f, 4.000000f, 4.000000f, 4.866667f, 6.000000f, 6.000000f,
                6.000000f, 5.066667f, 4.000000f, 4.869565f, 6.000000f, 4.162162f, 2.000000f, 2.000000f,
                2.000000f, 2.000000f, 2.000000f, 2.933333f, 4.000000f, 4.869565f, 6.000000f, 6.000000f,
                6.000000f, 6.000000f, 6.000000f, 5.111111f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.SERTANEJO, new float[]{
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.866667f, 4.000000f, 4.000000f,
                4.000000f, 4.933333f, 6.000000f, 6.869565f, 8.000000f, 7.081081f, 6.000000f, 6.000000f,
                6.000000f, 6.000000f, 6.000000f, 6.933333f, 8.000000f, 7.130435f, 6.000000f, 6.000000f,
                6.000000f, 5.133333f, 4.000000f, 4.000000f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.PRO, new float[]{
                 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.866667f, 8.000000f, 8.888889f,
                10.000000f, 9.066667f, 8.000000f, 7.130435f, 6.000000f, 5.081081f, 4.000000f, 3.133333f,
                 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.869565f, 4.000000f, 4.918919f,
                 6.000000f, 6.866667f, 8.000000f, 7.111111f, 6.000000f, 6.000000f, 6.000000f});
        put(SoundFxSettingEqualizerType.VIVID, new float[]{
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f,
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.918919f, 4.000000f, 4.000000f,
                4.000000f, 4.000000f, 4.000000f, 4.933333f, 6.000000f, 6.000000f, 6.000000f, 6.918919f,
                8.000000f, 8.000000f, 8.000000f, 6.222222f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.DYNAMIC, new float[]{
                6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f,
                6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 5.081081f, 4.000000f, 4.000000f,
                4.000000f, 4.000000f, 4.000000f, 4.933333f, 6.000000f, 6.000000f, 6.000000f, 6.918919f,
                8.000000f, 7.133333f, 6.000000f, 5.111111f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.JAZZ, new float[]{
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f,
                2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.000000f, 2.918919f, 4.000000f, 4.000000f,
                4.000000f, 4.000000f, 4.000000f, 4.933333f, 6.000000f, 6.000000f, 6.000000f, 6.918919f,
                8.000000f, 8.000000f, 8.000000f, 6.222222f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.FORRO, new float[]{
                6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f,
                6.000000f, 6.000000f, 6.000000f, 6.000000f, 6.000000f, 5.081081f, 4.000000f, 4.000000f,
                4.000000f, 4.000000f, 4.000000f, 4.933333f, 6.000000f, 6.000000f, 6.000000f, 6.918919f,
                8.000000f, 7.133333f, 6.000000f, 5.111111f, 4.000000f, 4.000000f, 4.000000f});
        put(SoundFxSettingEqualizerType.SPECIAL_DEBUG_1, new float[]{
                0.000000f, 1.000000f, 2.000000f, 3.000000f, 4.000000f, 5.000000f, 6.000000f, 7.000000f,
                8.000000f, 9.000000f, 8.000000f, 7.000000f, 6.000000f, 5.000000f, 4.000000f, 3.000000f,
                2.000000f, 1.000000f, 0.000000f, 1.000000f, 2.000000f, 3.000000f, 3.000000f, 4.000000f,
                5.000000f, 6.000000f, 7.000000f, 8.000000f, 9.000000f, 8.000000f, 7.000000f});
        put(SoundFxSettingEqualizerType.SPECIAL_DEBUG_2, new float[]{
                9.000000f, 8.000000f, 7.000000f, 6.000000f, 5.000000f, 4.000000f, 3.000000f, 2.000000f,
                1.000000f, 0.000000f, 1.000000f, 2.000000f, 3.000000f, 4.000000f, 5.000000f, 6.000000f,
                7.000000f, 8.000000f, 9.000000f, 8.000000f, 7.000000f, 6.000000f, 5.000000f, 4.000000f,
                3.000000f, 2.000000f, 1.000000f, 0.000000f, 1.000000f, 2.000000f, 3.000000f});
    }};

    /**
     * 31band値取得
     * <p>
     * プリセットのイコライザー種別から31bandの値を取得する
     * 31band値が定義されていないイコライザー種別の場合はFLAT(全て0)を返す
     *
     * @param key イコライザー種別
     * @return 31band値
     * @throws NullPointerException {@code key}がnull
     */
    public static float[] getBandValue(@NonNull SoundFxSettingEqualizerType key) {
        if (!map.containsKey(checkNotNull(key))) {
            return new float[31];
        }
        return map.get(key);
    }
}
